{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACrBD,SAASC,cAAc,UAItC,SAASC,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IACpBO,QAAQC,IAAI,eACZD,QAAQC,IAAI,C,SAAET,E,MAAUC,KAGxBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdbL,EAAKc,iBAAiB,UAmBtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAASC,OAAOlB,EAAKmB,SAASF,OAAOG,OACrCC,EAAOH,OAAOlB,EAAKmB,SAASE,KAAKD,OACjCE,EAAQJ,OAAOlB,EAAKmB,SAASd,MAAMe,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKN,EAAQM,IAC3BpB,EAAcoB,EAAGD,GACdE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA2B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,OACnDO,QAAMC,IAAI,QACZD,QAAQC,IAAI,C,SAAET,E,MAAUC,GAAQ,IAEjCsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA2B,OAAOG,QAAQ,qBAAmBxB,QAAeC,MAAU,IAG/DiB,EAAQD,EAAOC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\nconst button = document.querySelector('button');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log('co to robi?');\n        console.log({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let amount = Number(form.elements.amount.value);\n  let step = Number(form.elements.step.value);\n  let delay = Number(form.elements.delay.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log('then');\n        console.log({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay = step + delay;\n  }\n}\n\n/*const form = document.querySelector('.form');\nconst button = document.querySelector('button');\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n  let delay = Number(form.elements.delay.value);\n\n  for (let i = 0; i < amount; i++) {\n    let position = i;\n    createPromise(position, delay);\n    delay = step + delay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(({ position, delay }));\n      } else {\n        reject(({ position, delay }));\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      console.log(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\nform.addEventListener('submit', handleSubmit);*/\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","event","preventDefault","amount","Number","elements","value","step","delay1","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.ba7439b2.js.map"}